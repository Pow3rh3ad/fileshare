// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2p.proto

package rpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_NEW         Status = 0
	Status_PAUSED      Status = 1
	Status_DOWNLOADING Status = 2
	Status_FINISHED    Status = 3
)

var Status_name = map[int32]string{
	0: "NEW",
	1: "PAUSED",
	2: "DOWNLOADING",
	3: "FINISHED",
}

var Status_value = map[string]int32{
	"NEW":         0,
	"PAUSED":      1,
	"DOWNLOADING": 2,
	"FINISHED":    3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{0}
}

// The request message containing the user's name.
type ListRequest struct {
	FullDetails          bool     `protobuf:"varint,1,opt,name=fullDetails,proto3" json:"fullDetails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{0}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetFullDetails() bool {
	if m != nil {
		return m.FullDetails
	}
	return false
}

type ListReply struct {
	Files                []*MetaData `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListReply) Reset()         { *m = ListReply{} }
func (m *ListReply) String() string { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()    {}
func (*ListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{1}
}

func (m *ListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReply.Unmarshal(m, b)
}
func (m *ListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReply.Marshal(b, m, deterministic)
}
func (m *ListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReply.Merge(m, src)
}
func (m *ListReply) XXX_Size() int {
	return xxx_messageInfo_ListReply.Size(m)
}
func (m *ListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListReply proto.InternalMessageInfo

func (m *ListReply) GetFiles() []*MetaData {
	if m != nil {
		return m.Files
	}
	return nil
}

type MetaData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Publisher            string   `protobuf:"bytes,2,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	Downloadable         bool     `protobuf:"varint,5,opt,name=Downloadable,proto3" json:"Downloadable,omitempty"`
	FragmentCount        int32    `protobuf:"varint,6,opt,name=FragmentCount,proto3" json:"FragmentCount,omitempty"`
	AvailableFragments   []int32  `protobuf:"varint,7,rep,packed,name=AvailableFragments,proto3" json:"AvailableFragments,omitempty"`
	Status               Status   `protobuf:"varint,8,opt,name=Status,proto3,enum=rpc.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaData) Reset()         { *m = MetaData{} }
func (m *MetaData) String() string { return proto.CompactTextString(m) }
func (*MetaData) ProtoMessage()    {}
func (*MetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{2}
}

func (m *MetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaData.Unmarshal(m, b)
}
func (m *MetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaData.Marshal(b, m, deterministic)
}
func (m *MetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaData.Merge(m, src)
}
func (m *MetaData) XXX_Size() int {
	return xxx_messageInfo_MetaData.Size(m)
}
func (m *MetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaData.DiscardUnknown(m)
}

var xxx_messageInfo_MetaData proto.InternalMessageInfo

func (m *MetaData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetaData) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

func (m *MetaData) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MetaData) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MetaData) GetDownloadable() bool {
	if m != nil {
		return m.Downloadable
	}
	return false
}

func (m *MetaData) GetFragmentCount() int32 {
	if m != nil {
		return m.FragmentCount
	}
	return 0
}

func (m *MetaData) GetAvailableFragments() []int32 {
	if m != nil {
		return m.AvailableFragments
	}
	return nil
}

func (m *MetaData) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_NEW
}

type DownloadRequest struct {
	FileHash             string   `protobuf:"bytes,1,opt,name=FileHash,proto3" json:"FileHash,omitempty"`
	RequestedFragment    uint32   `protobuf:"varint,2,opt,name=RequestedFragment,proto3" json:"RequestedFragment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{3}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *DownloadRequest) GetRequestedFragment() uint32 {
	if m != nil {
		return m.RequestedFragment
	}
	return 0
}

type DownloadReply struct {
	FragmentID           uint32   `protobuf:"varint,1,opt,name=FragmentID,proto3" json:"FragmentID,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadReply) Reset()         { *m = DownloadReply{} }
func (m *DownloadReply) String() string { return proto.CompactTextString(m) }
func (*DownloadReply) ProtoMessage()    {}
func (*DownloadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{4}
}

func (m *DownloadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadReply.Unmarshal(m, b)
}
func (m *DownloadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadReply.Marshal(b, m, deterministic)
}
func (m *DownloadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadReply.Merge(m, src)
}
func (m *DownloadReply) XXX_Size() int {
	return xxx_messageInfo_DownloadReply.Size(m)
}
func (m *DownloadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadReply.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadReply proto.InternalMessageInfo

func (m *DownloadReply) GetFragmentID() uint32 {
	if m != nil {
		return m.FragmentID
	}
	return 0
}

func (m *DownloadReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FragmentRequest struct {
	FileHash             string   `protobuf:"bytes,1,opt,name=FileHash,proto3" json:"FileHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FragmentRequest) Reset()         { *m = FragmentRequest{} }
func (m *FragmentRequest) String() string { return proto.CompactTextString(m) }
func (*FragmentRequest) ProtoMessage()    {}
func (*FragmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{5}
}

func (m *FragmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FragmentRequest.Unmarshal(m, b)
}
func (m *FragmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FragmentRequest.Marshal(b, m, deterministic)
}
func (m *FragmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FragmentRequest.Merge(m, src)
}
func (m *FragmentRequest) XXX_Size() int {
	return xxx_messageInfo_FragmentRequest.Size(m)
}
func (m *FragmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FragmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FragmentRequest proto.InternalMessageInfo

func (m *FragmentRequest) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

type FragmentReply struct {
	Exists               bool     `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
	AvailableFragments   []int32  `protobuf:"varint,2,rep,packed,name=AvailableFragments,proto3" json:"AvailableFragments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FragmentReply) Reset()         { *m = FragmentReply{} }
func (m *FragmentReply) String() string { return proto.CompactTextString(m) }
func (*FragmentReply) ProtoMessage()    {}
func (*FragmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{6}
}

func (m *FragmentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FragmentReply.Unmarshal(m, b)
}
func (m *FragmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FragmentReply.Marshal(b, m, deterministic)
}
func (m *FragmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FragmentReply.Merge(m, src)
}
func (m *FragmentReply) XXX_Size() int {
	return xxx_messageInfo_FragmentReply.Size(m)
}
func (m *FragmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FragmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_FragmentReply proto.InternalMessageInfo

func (m *FragmentReply) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *FragmentReply) GetAvailableFragments() []int32 {
	if m != nil {
		return m.AvailableFragments
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "rpc.ListRequest")
	proto.RegisterType((*ListReply)(nil), "rpc.ListReply")
	proto.RegisterType((*MetaData)(nil), "rpc.MetaData")
	proto.RegisterType((*DownloadRequest)(nil), "rpc.DownloadRequest")
	proto.RegisterType((*DownloadReply)(nil), "rpc.DownloadReply")
	proto.RegisterType((*FragmentRequest)(nil), "rpc.FragmentRequest")
	proto.RegisterType((*FragmentReply)(nil), "rpc.FragmentReply")
	proto.RegisterEnum("rpc.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileServiceClient is the client API for FileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileServiceClient interface {
	RemoteList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	RemoteDownload(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DownloadReply, error)
	RemoteFragmentsAvailable(ctx context.Context, in *FragmentRequest, opts ...grpc.CallOption) (*FragmentReply, error)
}

type fileServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileServiceClient(cc *grpc.ClientConn) FileServiceClient {
	return &fileServiceClient{cc}
}

func (c *fileServiceClient) RemoteList(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := c.cc.Invoke(ctx, "/rpc.FileService/RemoteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) RemoteDownload(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DownloadReply, error) {
	out := new(DownloadReply)
	err := c.cc.Invoke(ctx, "/rpc.FileService/RemoteDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileServiceClient) RemoteFragmentsAvailable(ctx context.Context, in *FragmentRequest, opts ...grpc.CallOption) (*FragmentReply, error) {
	out := new(FragmentReply)
	err := c.cc.Invoke(ctx, "/rpc.FileService/RemoteFragmentsAvailable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServiceServer is the server API for FileService service.
type FileServiceServer interface {
	RemoteList(context.Context, *ListRequest) (*ListReply, error)
	RemoteDownload(context.Context, *DownloadRequest) (*DownloadReply, error)
	RemoteFragmentsAvailable(context.Context, *FragmentRequest) (*FragmentReply, error)
}

func RegisterFileServiceServer(s *grpc.Server, srv FileServiceServer) {
	s.RegisterService(&_FileService_serviceDesc, srv)
}

func _FileService_RemoteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).RemoteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.FileService/RemoteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).RemoteList(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_RemoteDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).RemoteDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.FileService/RemoteDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).RemoteDownload(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileService_RemoteFragmentsAvailable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FragmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServiceServer).RemoteFragmentsAvailable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.FileService/RemoteFragmentsAvailable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServiceServer).RemoteFragmentsAvailable(ctx, req.(*FragmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.FileService",
	HandlerType: (*FileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RemoteList",
			Handler:    _FileService_RemoteList_Handler,
		},
		{
			MethodName: "RemoteDownload",
			Handler:    _FileService_RemoteDownload_Handler,
		},
		{
			MethodName: "RemoteFragmentsAvailable",
			Handler:    _FileService_RemoteFragmentsAvailable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "p2p.proto",
}

func init() { proto.RegisterFile("p2p.proto", fileDescriptor_e7fdddb109e6467a) }

var fileDescriptor_e7fdddb109e6467a = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0x26, 0x4d, 0xc6, 0xf9, 0x62, 0x84, 0x90, 0x15, 0x21, 0x64, 0x6d, 0x39, 0x58,
	0x08, 0x42, 0x15, 0xae, 0xbd, 0x44, 0x75, 0x42, 0x23, 0x15, 0xb7, 0x5a, 0x0b, 0xe5, 0xc0, 0x69,
	0x93, 0x6e, 0xa9, 0xa5, 0x4d, 0x6c, 0xec, 0x75, 0xa1, 0x5c, 0xf9, 0x6d, 0xfc, 0x2f, 0xb4, 0x6b,
	0x6f, 0xbe, 0xa0, 0x12, 0xb7, 0xf1, 0x7b, 0xf3, 0xde, 0xce, 0xbe, 0x59, 0x43, 0x2b, 0x1d, 0xa5,
	0xc3, 0x34, 0x4b, 0x64, 0x82, 0x76, 0x96, 0x2e, 0xc9, 0x7b, 0x70, 0xae, 0xe2, 0x5c, 0x52, 0xfe,
	0xad, 0xe0, 0xb9, 0x44, 0x0f, 0x9c, 0xbb, 0x42, 0x88, 0x80, 0x4b, 0x16, 0x8b, 0xdc, 0xb5, 0x3c,
	0xcb, 0x6f, 0xd2, 0x5d, 0x88, 0x9c, 0x41, 0xab, 0x14, 0xa4, 0xe2, 0x11, 0x4f, 0xa1, 0x7e, 0x17,
	0x0b, 0xae, 0x1a, 0x6d, 0xdf, 0x19, 0x75, 0x86, 0x59, 0xba, 0x1c, 0x7e, 0xe2, 0x92, 0x05, 0x4c,
	0x32, 0x5a, 0x72, 0xe4, 0x57, 0x0d, 0x9a, 0x06, 0x43, 0x84, 0xe3, 0x90, 0xad, 0xb8, 0x76, 0x6e,
	0x51, 0x5d, 0xe3, 0x4b, 0x68, 0xdd, 0x14, 0x0b, 0x11, 0xe7, 0xf7, 0x3c, 0x73, 0x6b, 0x9a, 0xd8,
	0x02, 0x4a, 0x71, 0xc9, 0xf2, 0x7b, 0xd7, 0x2e, 0x15, 0xaa, 0x56, 0x58, 0x14, 0xff, 0xe4, 0xee,
	0xb1, 0x67, 0xf9, 0x36, 0xd5, 0x35, 0x12, 0x68, 0x07, 0xc9, 0xf7, 0xb5, 0x48, 0xd8, 0x2d, 0x5b,
	0x08, 0xee, 0xd6, 0xf5, 0xec, 0x7b, 0x18, 0xbe, 0x86, 0xce, 0x34, 0x63, 0x5f, 0x57, 0x7c, 0x2d,
	0x2f, 0x92, 0x62, 0x2d, 0xdd, 0x86, 0x67, 0xf9, 0x75, 0xba, 0x0f, 0xe2, 0x10, 0x70, 0xfc, 0xc0,
	0x62, 0xa1, 0x24, 0x86, 0xc9, 0xdd, 0x13, 0xcf, 0xf6, 0xeb, 0xf4, 0x1f, 0x0c, 0x9e, 0x42, 0x23,
	0x92, 0x4c, 0x16, 0xb9, 0xdb, 0xf4, 0x2c, 0xbf, 0x3b, 0x72, 0x74, 0x0c, 0x25, 0x44, 0x2b, 0x8a,
	0x7c, 0x81, 0x9e, 0x19, 0xc5, 0x84, 0x3d, 0x80, 0xe6, 0x34, 0x16, 0x5c, 0xdf, 0xae, 0xcc, 0x63,
	0xf3, 0x8d, 0x6f, 0xe1, 0x59, 0xd5, 0xc6, 0x6f, 0xcd, 0x49, 0x3a, 0x9b, 0x0e, 0xfd, 0x9b, 0x20,
	0x17, 0xd0, 0xd9, 0x9a, 0xab, 0xc5, 0xbc, 0x02, 0x30, 0xe4, 0x2c, 0xd0, 0xe6, 0x1d, 0xba, 0x83,
	0xa8, 0x00, 0xd5, 0x3a, 0xb4, 0x63, 0x9b, 0xea, 0x9a, 0xbc, 0x83, 0x9e, 0xe9, 0xf8, 0x8f, 0x09,
	0xc9, 0x7c, 0x9b, 0x65, 0x79, 0xe6, 0x0b, 0x68, 0x4c, 0x7e, 0xc4, 0xb9, 0x34, 0xcf, 0xa6, 0xfa,
	0x7a, 0x22, 0xce, 0xda, 0x53, 0x71, 0xbe, 0x39, 0x37, 0x71, 0xe2, 0x09, 0xd8, 0xe1, 0x64, 0xde,
	0x3f, 0x42, 0x80, 0xc6, 0xcd, 0xf8, 0x73, 0x34, 0x09, 0xfa, 0x16, 0xf6, 0xc0, 0x09, 0xae, 0xe7,
	0xe1, 0xd5, 0xf5, 0x38, 0x98, 0x85, 0x1f, 0xfb, 0x35, 0x6c, 0x43, 0x73, 0x3a, 0x0b, 0x67, 0xd1,
	0xe5, 0x24, 0xe8, 0xdb, 0xa3, 0xdf, 0x16, 0x38, 0x6a, 0xc6, 0x88, 0x67, 0x0f, 0xf1, 0x92, 0xe3,
	0x19, 0x00, 0xe5, 0xab, 0x44, 0x72, 0xf5, 0x6a, 0xb1, 0xaf, 0x57, 0xb3, 0xf3, 0xe2, 0x07, 0xdd,
	0x1d, 0x24, 0x15, 0x8f, 0xe4, 0x08, 0xcf, 0xa1, 0x5b, 0x2a, 0x4c, 0xa4, 0xf8, 0x5c, 0xf7, 0x1c,
	0xac, 0x6f, 0x80, 0x07, 0x68, 0xa9, 0x9e, 0x82, 0x5b, 0xaa, 0x37, 0x17, 0xda, 0x5c, 0xb1, 0xf2,
	0x39, 0x08, 0xb9, 0xf2, 0xd9, 0xcb, 0x92, 0x1c, 0x2d, 0x1a, 0xfa, 0x27, 0xfd, 0xf0, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x86, 0x4f, 0x71, 0x04, 0xb1, 0x03, 0x00, 0x00,
}
